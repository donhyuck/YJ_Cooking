<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ldh.exam.demo.repository.RecipeRepository">

	<select id="getRecipeById" resultType="Recipe">
		SELECT R.*
		FROM recipe AS R
		WHERE R.id = #{id}
	</select>

	<select id="getForPrintRecipe" resultType="Recipe">
		SELECT R.*,
		M.nickname
		AS extra__writerName
		FROM recipe AS R
		LEFT JOIN `member` AS M
		ON
		R.memberId = M.id
		WHERE R.id = #{id}
	</select>

	<select id="getIngredientByRecipeId" resultType="Ingredient">
		SELECT *
		FROM
		ingredient AS IG
		WHERE recipeId = #{recipeId}
	</select>

	<select id="getForPrintRecipes" resultType="Recipe">
		SELECT R.*,
		M.nickname AS extra__writerName
		FROM recipe AS R
		LEFT JOIN `member` AS M
		ON R.memberId = M.id
		ORDER
		BY R.id DESC
	</select>

	<select id="getRandomRecipes" resultType="Recipe">
		SELECT R.*,
		M.nickname
		AS extra__writerName
		FROM (
		SELECT * FROM recipe
		ORDER BY
		(goodRP+hitCount+scrap) DESC
		LIMIT #{randomCount}
		) AS R
		LEFT
		JOIN
		`member` AS M
		ON R.memberId = M.id
		ORDER BY RAND() DESC
		LIMIT
		#{randomCountInAPage}
	</select>

	<select id="getMoreSuggestRecipeByTabCode" resultType="Recipe">
		SELECT
		R.*,
		M.nickname
		AS extra__writerName
		FROM recipe AS R
		LEFT JOIN
		`member` AS M
		ON R.memberId = M.id
		<choose>
			<when test="tabCode == 1">
				ORDER BY R.regDate DESC
			</when>
			<when test="tabCode == 2">
				ORDER BY R.hitCount DESC
			</when>
			<when test="tabCode == 3">
				ORDER BY R.scrap DESC
			</when>
			<when test="tabCode == 4">
				ORDER BY R.goodRP DESC
			</when>
		</choose>
		LIMIT #{suggestCount}
	</select>

	<select id="getRecentRecipes" resultType="Recipe">
		SELECT R.*,
		M.nickname
		AS extra__writerName
		FROM recipe AS R
		LEFT JOIN
		`member` AS M
		ON R.memberId = M.id
		ORDER BY R.regDate DESC
		<if test="limitStart != -1">
			LIMIT #{limitStart}, #{limitTake}
		</if>
	</select>

	<select id="getRecipesByGuideId" resultType="Recipe">
		SELECT R.*,
		M.nickname AS extra__writerName
		FROM (
		SELECT G.*
		FROM `guide`
		AS G
		WHERE 1
		<choose>
			<when test="boardId == 1">
				AND G.sortId
				<if test="relId != 0">=#{relId}</if>
				<if test="relId == 0">IS NOT NULL</if>
			</when>
			<when test="boardId == 2">
				AND G.methodId
				<if test="relId != 0">=#{relId}</if>
				<if test="relId == 0">IS NOT NULL</if>
			</when>
			<when test="boardId == 3">
				AND G.contentId
				<if test="relId != 0">=#{relId}</if>
				<if test="relId == 0">IS NOT NULL</if>
			</when>
			<when test="boardId == 4">
				AND G.freeId
				<if test="relId != 0">=#{relId}</if>
				<if test="relId == 0">IS NOT NULL</if>
			</when>
			<otherwise>
				AND 1
			</otherwise>
		</choose>
		) AS G
		LEFT JOIN `recipe`
		AS R
		ON G.recipeId = R.id
		LEFT JOIN `member`
		AS M
		ON R.memberId = M.id
	</select>

	<select id="getRankRecipes" resultType="Recipe">
		SELECT (@num:=@num+1) AS
		extra__rank,
		R.*, M.nickname AS extra__writerName
		FROM (SELECT @num:=0)
		AS rankTable,
		recipe AS R
		LEFT JOIN `member` AS M
		ON R.memberId = M.id
		ORDER BY (R.goodRP + R.hitCount + R.scrap) DESC
		LIMIT #{rankCount}
	</select>

	<select id="getManyScrapRecipes" resultType="Recipe">
		SELECT
		(@num:=@num+1) AS extra__rank,
		R.*, M.nickname AS extra__writerName
		FROM (SELECT @num:=0) AS rankTable,
		recipe AS R
		LEFT JOIN `member` AS M
		ON R.memberId = M.id
		ORDER BY R.scrap DESC
		LIMIT #{manyScrapCount}
	</select>

	<select id="getRegisteredRecipes" resultType="Recipe">
		SELECT R.*,
		M.nickname
		AS extra__writerName
		FROM recipe AS R
		LEFT JOIN
		`member` AS M
		ON R.memberId = M.id
		WHERE R.memberId = #{ memberId }
		ORDER BY R.id DESC
		<if test="limitStart != -1">
			LIMIT #{limitStart}, #{limitTake}
		</if>
	</select>

	<select id="getRegisteredRecipesCount" resultType="int">
		SELECT
		COUNT(*)
		FROM recipe AS R
		WHERE R.memberId = #{ memberId }
	</select>

	<select id="getScrapRecipes" resultType="Recipe">
		SELECT R.*
		FROM (
		SELECT
		R.*,
		M.nickname AS extra__writerName
		FROM recipe AS R
		LEFT JOIN
		`member`
		AS M
		ON R.memberId = M.id
		) AS R
		LEFT JOIN scrapPoint AS SP
		ON R.id =
		SP.relId
		WHERE SP.memberId = #{memberId}
		GROUP BY R.id
		ORDER BY R.id DESC
	</select>

	<select id="getHaveReplyRecipes" resultType="Recipe">
		SELECT R.*,
		RE.extra__replyWriteName AS extra__replyWriteName,
		RE.body AS
		extra__replyBody
		FROM (
		SELECT R.*,
		M.nickname AS extra__writerName
		FROM
		recipe AS R
		LEFT JOIN `member` AS M
		ON R.memberId = M.id
		) AS R
		LEFT JOIN
		( SELECT RE.*,
		M.nickname AS extra__replyWriteName
		FROM reply AS RE
		LEFT
		JOIN `member`
		AS M
		ON RE.memberId = M.id
		) AS RE
		ON R.id = RE.relId
		WHERE
		RE.memberId = 3
		ORDER BY R.id DESC
	</select>

	<insert id="writeRecipe">
		INSERT INTO recipe
		SET regDate=NOW(),
		updateDate=NOW(),
		memberId = #{memberId},
		`title` = #{title},
		`body` =
		#{body},
		`amount` = #{amount},
		`time` = #{time},
		`level` = #{level},
		`guideId` = #{guideId},
		`ingredientId` = #{ingredientId},
		`tip` = #{tip}
	</insert>

	<insert id="insertIngredient">
		INSERT INTO ingredient
		SET regDate=NOW(),
		updateDate=NOW(),
		rowArr=#{rowArr},
		rowValueArr=#{rowValueArr},
		sauceArr=#{sauceArr},
		sauceValueArr=#{sauceValueArr}
	</insert>

	<update id="updateRecipeIdForIngredient">
		UPDATE ingredient
		SET recipeId=#{recipeId}
		WHERE
		id=#{ingredientId}
	</update>

	<update id="updateIngredient">
		UPDATE ingredient
		SET updateDate=NOW(),
		rowArr=#{rowArr},
		rowValueArr=#{rowValueArr},
		sauceArr=#{sauceArr},
		sauceValueArr=#{sauceValueArr}
		WHERE id=#{id}
	</update>

	<update id="modifyRecipe">
		UPDATE recipe
		<set>
			<if test="title != null and title !=''">
				title = #{title},
			</if>
			<if test="body != null and body !=''">
				`body` = #{body},
			</if>
			<if test="amount != 0">
				`amount` = #{amount},
			</if>
			<if test="time != 0">
				`time` = #{time},
			</if>
			<if test="level != 0">
				`level` = #{level},
			</if>
			<if test="tip != null and tip !=''">
				`tip` = #{tip},
			</if>
			updateDate = NOW()
		</set>
		WHERE id = #{id}
	</update>

	<delete id="deleteRecipe">
		DELETE
		FROM recipe
		WHERE id = #{id}
	</delete>

	<select id="getLastInsertId" resultType="int">
		SELECT
		LAST_INSERT_ID()
	</select>

	<update id="increaseHitCount">
		UPDATE recipe
		SET hitCount = hitCount + 1
		WHERE id =
		#{id}
	</update>

	<select id="getRecipeHitCount" resultType="int">
		SELECT hitCount
		FROM
		recipe
		WHERE id = #{id}
	</select>

	<update id="increaseGoodRP">
		UPDATE recipe
		SET goodRP = goodRP + 1
		WHERE id =
		#{id}
	</update>

	<update id="decreaseGoodRP">
		UPDATE recipe
		SET goodRP = goodRP - 1
		WHERE id =
		#{id}
	</update>

	<update id="increaseScrapPoint">
		UPDATE recipe
		SET scrap = scrap + 1
		WHERE id =
		#{id}
	</update>

	<update id="decreaseScrapPoint">
		UPDATE recipe
		SET scrap = scrap - 1
		WHERE id =
		#{id}
	</update>

</mapper> 